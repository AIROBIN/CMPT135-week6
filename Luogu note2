Data tpye           memory space       range
char               1 byte/8 bits    [-128,127]
int                4 bytes/32 bits  [-2^31,2^31-1]
unsigned int       4 bytes/ 32 bits [0,2^32]
long long          8 bytes/64 bits  [-2^63,2^63-1]  9*10^18
unsigned long long 8 bytes/64 bits  [0,2^64]
double             4 bytes/64 bits   logn |x|<=308 (15 Significant figures)

round off
int(x+0.5)

int int(double x)     int(-2.3)=-2
double floor(double x)  floor(-2.3)=-3
double fabs(double x)

double x,y;
if(x-y>1e-6) cout<<"x>y";
else cout<<"x<y";

if(x<=1e-6) cout<<"x==0";  
//EPS是个很小的数，如1e-6，因为浮点数在内存中的表示是不精确的，
//会有很微小的误差，所以判断是否为0，就看它的绝对值是不是<=EPS

//  (int)(x*0.3/500)  =   x/10*3/500




if(y%x==0) cout<<n-y/x;
else  cout<<n-y/x-1;

1234
x%10
x/10%10
x/100%10

x/1000>0&&x/1000<10
x%1==0

int root=(int)sqrt(x*1.0);
if(root*root==x) cout<<"square number";
else cout<<"no";

int root=pow(x,1.0/3);
if(root*root*root==x&&x%2==1&&x/100>0&&x/100<10&&x%1==0)
	cout<<" it is a odd number";
if(x/100>0&&x/100<10&&x%1==0)
   if(pow(x%10,3.0)+pow(x/10%10,3.0)+pow(x/100,3.0)==x)
   	cout<<" shuixianhua";


#include<algorithm>
min(3,5)=3;
max(3,5)=5;
a=min(b,c);  same data type

O(1)            <=long long
O(log n)        <=long long
O(n)             5*10^7
O(n log n)      10^6
O(n sqrt(n))   2*10^5
O(n log^2 (n))  10^5
O(n^2)          10^4
O(n^3)        400-500
O(n!)         11（在NOI现场上，你甚至可以跑10万）

常见算法的复杂度（不要求掌握，仅作了解）
辗转相除法：O(log n)
素数判定：O(sqrt n)
选择排序、插入排序、冒泡排序：O(n^2)
快速排序、堆排序、归并排序：O(nlogn)
m边数 n点数                        m操作次数 n序列长度
Kruskal：O(m log m)               树状数组：O(m log n)
Prim：O(n^2)                      线段树：O(m log n)
Tarjan lca：O(n log n)            平衡树：O(m log n)
Tarjan 割点：O(n+m)               并查集：O(m log n)
Dijkstra:O((n+m) log n)           分块：O(m sqrt n)
Bellman-ford:O(nm)                莫队：O(n sqrt n) 带修改：O(n^5/3)
SPFA:O(nm)
Dinic:O(n^2m)
EK:O(nm^2)（最大流）

x&1  <->  x%2==1
判断一个数是不是2的整数次幂
x&(x-1)==0


不定方程
3x+y/5=100
for(int x=0;x<=100/3;x++)  
{
   y=(100-3*x)*5;
   if(x+y==100&y%5==0)
      cout<<x<<","<<y<<endl;
}

<ctime>
cout<<(double)CLOCK()/CLOCKS_PER_SEC;

末6位  对10^6取模
const int mod=1000000;


